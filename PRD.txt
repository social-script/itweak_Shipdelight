# Product Requirements Document: Shipdelight API Integration for Reverse Pickups with QC

## Overview
This document outlines the implementation plan for integrating the Shipdelight API into the itweak_Sales application to enable reverse pickup creation with Quality Compliance (QC) enabled.

## User Flow
1. User fills out the Return Order form with all required details
2. User submits the form
3. System makes API calls to Shipdelight:
   - Generate authentication token (if needed)
   - Create a reverse pickup with QC enabled
4. System displays success/error notifications to the user
5. If successful, AWB number is displayed to the user

## Implementation Tasks

### Frontend Implementation
- [ ] Update AddReturnOrderModal to include all required Shipdelight API fields
- [x] Add automatic volumetric weight calculation (l × b × h / 5000)
- [x] Add Pincode-based City/State lookup for pickup and delivery addresses
- [x] Create user feedback mechanism (toast notifications)
- [x] Connect form submission to backend API endpoint
- [ ] Add validation for all required fields per Shipdelight API requirements

### Backend API Implementation
- [x] Create token management service
  - [x] Implement token generation via Shipdelight API
  - [x] Add token storage mechanism
  - [x] Add token refresh logic (for 24h expiration)
- [x] Create reverse pickup endpoint
  - [x] Accept form data from frontend
  - [x] Transform data to Shipdelight API format
  - [x] Set QC to "y" for all orders
  - [x] Set auto_approve to "false" (for manual review)
  - [x] Make authenticated request to Shipdelight booking API
  - [x] Handle response and errors
  - [x] Return appropriate response to frontend

### Data Mapping
- [x] Map Order Details → Basic API parameters
  - [x] Return Order No. → order_number
  - [x] Invoice Value → invoice_total
  - [x] Weight → actual_weight
  - [x] Dimensions → length, breadth, height
  - [x] Volumetric Weight → volumetric_weight
  - [x] Pay Type → payment_method (PPD/COD)
- [x] Map Item Details → line_items array
  - [x] Item Description → name
  - [x] SKU → sku
  - [x] Quantity → quantity
  - [x] Unit Price → unit_price
  - [x] Item Weight → actual_weight
  - [x] Return Reason → return_reasons
- [x] Map Pickup Details → pickup object
  - [x] Customer Name → vendor_name
  - [x] Contact Number → phone
  - [x] Address → address_1, address_2
  - [x] City → city
  - [x] State → state
  - [x] Pincode → postcode
- [x] Map Delivery Details → shipping object
  - [x] Vendor Name → first_name
  - [x] Contact Number → phone
  - [x] Address → address_1, address_2
  - [x] City → city
  - [x] State → state
  - [x] Pincode → postcode
- [x] Map GST Details → gst_details object (if invoice ≥ 50,000 INR)
  - [x] GST Number → gst_number
  - [x] CGST% → cgst
  - [x] SGST% → sgst
  - [x] IGST% → igst
  - [x] HSN Number → hsn_number
  - [x] E-way Bill Number → ewaybill_number

### Testing
- [ ] Test token generation and refreshing
- [ ] Test reverse pickup creation with QC
- [ ] Test error handling and user feedback
- [x] Test auto-calculation of volumetric weight
- [x] Test Pincode-based City/State lookup
- [ ] Verify all data is correctly mapped to Shipdelight API format

### Documentation
- [x] Document API endpoints
- [x] Document token management strategy
- [ ] Create user guide for the Return Order form

## Technical Considerations
1. Security: API keys and tokens must not be exposed in frontend code
2. Performance: Minimize API calls, implement efficient token management
3. User Experience: Provide clear feedback, implement loading states
4. Error Handling: Handle and display meaningful error messages

## API References
1. Token Generation API: https://appapi.shipdelight.com/generate-token
2. AWB Generation API: https://appapi.shipdelight.com/booking 